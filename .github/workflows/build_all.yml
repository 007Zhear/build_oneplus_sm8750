name: Build All Kernels

on:
  workflow_dispatch:
    inputs:
      KERNEL_SUFFIX:
        description: '内核名称修改(可改中文和emoji)'
        required: true
        default: '-android15-8-g013ec21bba94-abogki383916444-4k'
      KERNEL_TIME:
        description: "内核构建日期更改(默认为原厂)"
        required: true
        default: 'Tue Dec 17 23:36:49 UTC 2024'
      enable_feature_x:
        description: "是否启用kpm"
        required: false
        default: true
        type: boolean
      enable_feature_y:
        description: "是否启用lz4kd"
        required: false
        default: true
        type: boolean
      enable_feature_z:
        description: "是否添加风驰驱动"
        required: false
        default: true
        type: boolean

jobs:
  build_all:
    name: Build All Devices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: 
          - oneplus_13
          - oneplus_13T
          - oneplus_ace5_pro
          - oneplus_pad_2_pro
    steps:
      - name: Determine Kernel Suffix
        id: set_suffix
        run: |
          if [ "${{ matrix.device }}" = "oneplus_pad_2_pro" ]; then
            echo "kernel_suffix=-TG@Q1udaoyu" >> $GITHUB_OUTPUT
          else
            echo "kernel_suffix=${{ inputs.KERNEL_SUFFIX }}" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Device Build
        uses: actions/github-script@v7
        id: trigger
        with:
          script: |
            const { owner, repo } = context.repo;
            
      
            const inputs = {
              KERNEL_SUFFIX: '${{ steps.set_suffix.outputs.kernel_suffix }}',
              KERNEL_TIME: '${{ inputs.KERNEL_TIME }}',
              enable_feature_x: ${{ inputs.enable_feature_x }},
              enable_feature_y: ${{ inputs.enable_feature_y }},
              enable_feature_z: ${{ inputs.enable_feature_z }}
            };
            
            // 触发工作流
            const response = await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: '${{ matrix.device }}.yml',
              ref: '${{ github.ref }}',
              inputs
            });
            
            // 等待几秒让工作流运行创建
            await new Promise(resolve => setTimeout(resolve, 15000));
            
            // 获取最新运行ID
            const runs = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: '${{ matrix.device }}.yml',
              per_page: 1,
              event: 'workflow_dispatch'
            });
            
            if (runs.data.workflow_runs.length === 0) {
              throw new Error('Failed to find triggered workflow run');
            }
            
            const runId = runs.data.workflow_runs[0].id;
            core.setOutput('run_id', runId);
            return runId;

      - name: Wait for Build Completion
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          runId: ${{ steps.trigger.outputs.result }}
          intervalSeconds: 60
          timeoutSeconds: 7200 

  collect_artifacts:
    name: Collect Artifacts
    needs: build_all
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Package for Download
        run: |
          cd artifacts
          zip -r ../all_kernels.zip .
          cd ..
          
      - name: Upload Combined Package
        uses: actions/upload-artifact@v4
        with:
          name: ALL_KERNELS_PACKAGE
          path: all_kernels.zip
